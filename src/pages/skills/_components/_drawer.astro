---
import { Image } from 'astro:assets';
import Lister from './_lister.astro';

interface Props {
  categoryTitle: string;
  values: string[];
}

const { categoryTitle: title, values } = Astro.props;
const id = title;
const titlizeTitle = (title: string) => {
  return title
    .split('')
    .map((a, i) => {
      if (i == 0) return a.toUpperCase();
      else if (a === '_' || a === '-') return ' ';
      else return a.toLowerCase();
    })
    .join('');
};
---

<div class='relative bg-transparent' data-parent-id={id}>
  <div
    class='absolute inset-0 w-full h-full bg-gradient-to-br from-yellow-200 via-green-500 to-cyan-600 rounded-lg'
    data-neon-id={id}
  >
  </div>
  <div
    class='flex items-center relative transition-colors justify-between p-4 text-white bg-neutral-900 rounded-t-xl rounded-b-xl ring-1 ring-offset-transparent'
    data-rounded-id={id}
  >
    <p
      class='tracking-wide bg-gradient-to-r from-yellow-200 via-green-500 to-cyan-600 bg-clip-text font-semibold text-lg'
      data-transparent-id={id}
    >
      {titlizeTitle(title)}
    </p>
    <div
      class='flex transform transition-transform duration-700 -rotate-90'
      data-icon-id={id}
    >
      <Image src='/arrow.svg' height={24} width={24} alt='drop icon' />
    </div>
  </div>
  <custom-component data-ider={id} data-close='true' class='bg-gray-400'
  ></custom-component>
  <div
    data-enlarge-id={id}
    class='transition-all relative duration-700 transform hidden scale-y-0 origin-top bg-neutral-900 rounded-b-xl overflow-hidden'
  >
    <ul class='list-none px-4 pb-2 tracking-wider'>
      {values.map((skill) => <Lister skill={skill} />)}
    </ul>
  </div>
</div>
