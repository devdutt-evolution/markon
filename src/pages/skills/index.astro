---
import { getEntry } from 'astro:content';
import DrawerColumn from './_components/_drawerColumn.astro';
import FixedHeight from '../_components/_fixedHeight.astro';
import PageHeader from '../_components/_pageTitle.astro';
import Layout from '../../layouts/MainLayout.astro';

const { data } = await getEntry('skills', 'skills');

const arr = Object.entries(data).map(([name, value]) => {
  return {
    category: name,
    values: value,
  };
});

const breakPoint = arr.length / 2;
const first = arr.slice(0, breakPoint);
const second = arr.slice(breakPoint);
const title = 'Skills | Devdutt';
const description =
  "Explore Devdutt's skills in web technologies, programming languages, cloud services, and more. See how I can contribute to your projects.";
---

<Layout
  pageTitle={title}
  pageDescription={description}
  ogTitle={title}
  ogDescription={description}
>
  <FixedHeight color='bg-neutral-900' />
  <div class='bg-neutral-900'>
    <div class='max-w-3xl p-4 mx-auto space-y-4'>
      <PageHeader text='SKillS' />
      <div class='md:grid-cols-2 grid grid-cols-1 gap-4 mx-auto'>
        {[first, second].map((val) => <DrawerColumn skillCollection={val} />)}
      </div>
    </div>
  </div>
  <FixedHeight color='bg-neutral-900' />

  <script async is:inline>
    class CustomComponent extends HTMLElement {
      constructor() {
        super();

        const oId = this.dataset.ider;
        const getElement = document.querySelector(`#parent${oId}`);
        const enlargeIt = document.querySelector(`#enlarge${oId}`);
        const removeRounded = document.querySelector(`#rounded${oId}`);
        const rotateIt = document.querySelector(`#icon${oId}`);
        const neonAdd = document.querySelector(`#neon${oId}`);
        const transparent = document.querySelector(`#transparent${oId}`);

        getElement?.addEventListener('click', () => {
          if (this.dataset.close === 'true') {
            enlargeIt?.classList.remove('hidden');
            enlargeIt?.classList.add('scale-y-100');
            transparent?.classList.add('text-transparent');
            removeRounded?.classList.remove('rounded-b-xl');
            neonAdd?.classList.add('blur-sm');
            rotateIt?.classList.add('rotate-90');
            this.setAttribute('data-close', 'false');
          } else {
            enlargeIt?.classList.add('hidden');
            enlargeIt?.classList.remove('scale-y-100');
            removeRounded?.classList.add('rounded-b-xl');
            transparent?.classList.remove('text-transparent');
            neonAdd?.classList.remove('blur-sm');
            rotateIt?.classList.remove('rotate-90');
            this.setAttribute('data-close', 'true');
          }
        });
      }
    }
    customElements.define('custom-component', CustomComponent);
  </script>
</Layout>
