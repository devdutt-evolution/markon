---
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import { ViewTransitions } from 'astro:transitions';
import FixedHeight from '../../components/FixedHeight.astro';
import Heading from '../../components/customMdx/Heading.astro';
import Layout from '../../layouts/Layout.astro';

export async function getStaticPaths() {
  const blogPosts = await getCollection('blog');

  return blogPosts.map((post) => ({
    params: {
      slug: post.slug,
    },
    props: {
      post,
    },
  }));
}

type Props = {
  post: CollectionEntry<'blog'>;
};

const { post } = Astro.props;
const { slug, data } = post;
const finalURL = `/blogs/${slug}`;
const { Content } = await post.render();
const {
  title,
  og_title,
  og_description,
  og_image,
  og_type,
  og_author,
  og_publishedOn,
} = data;
---

<!doctype html>
<html lang='en'>
  <head>
    <ViewTransitions />
    <meta charset='UTF-8' />
    <meta name='description' content='Astro description' />
    <meta name='viewport' content='width=device-width' />
    <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
    <title>{title || 'Devdutt/Blog'}</title>
    <meta property='og:title' content={og_title} />
    <meta property='og:description' content={og_description} />
    <meta property='og:url' content={finalURL} />
    <meta property='og:image' content={og_image} />
    <meta property='og:type' content={og_type} />
    <meta property='og:author' content={og_author} />
    <meta property='og:published_time' content={og_publishedOn} />
    <meta property='twitter:card' content='summary_large_image' />
    <meta property='article:published_time' content={og_publishedOn} />
    <style is:global>
      ::-webkit-scrollbar {
        width: 10px;
      }
      ::-webkit-scrollbar-track {
        background: #f1f1f1;
      }
      ::-webkit-scrollbar-thumb {
        background: #888;
        border-radius: 5px;
      }
      ::-webkit-scrollbar-thumb:hover {
        background: #555;
      }
    </style>
  </head>
  <Layout>
    <FixedHeight color='bg-slate-800' />
    <FixedHeight color='bg-slate-800' />
    <FixedHeight color='bg-neutral-900' />

    <div class='bg-neutral-900 px-4 md:p-0'>
      <article
        class='md:prose-lg prose-invert prose-a:text-blue-600 prose-h2:text-yellow-400 prose-li:prose-ul:marker:text-yellow-400 prose-li:prose-ol:marker:text-blue-600 prose-code:select-all mx-auto prose'
      >
        <Content components={{ h1: Heading }} />
      </article>
    </div>

    <FixedHeight color='bg-neutral-900' />
    <FixedHeight color='bg-neutral-900' />
  </Layout>


</html>
